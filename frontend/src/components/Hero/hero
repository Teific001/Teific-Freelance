import React, { useLayoutEffect, useRef } from 'react'
import HeroBg1 from '../../Assets/images/hero1.png'
import HeroBg2 from '../../Assets/images/hero2.png'
import { slideAnimation } from '../../motion/motion'
import {motion} from 'motion/react'
import './main.css'
import { ReactComponent as Mouse } from "../../Assets/images/magic-mouse_1.svg";
import { ScrollTrigger } from "gsap/ScrollTrigger";
import SplitType from "split-type";
import { gsap } from "gsap";
gsap.registerPlugin(ScrollTrigger);





const Hero = () => {
  const mn = useRef();
  const proHead = useRef();

  useLayoutEffect(()=>{
    let mm = gsap.matchMedia();
    let mysplittext = new SplitType(proHead.current, { type: "chars" });
    let chars = mysplittext.chars;

  mm.add("(max-width: 1000px)", () => {
    var tl1 = gsap.timeline({
      scrollTrigger: {
        trigger: mn.current,
        start: "50% 50%",
        end: "80% 50%",
        scrub: 2,
        pin: true,
      },
    });
    // this setup code only runs when viewport is at least 800px wide
    tl1
      .to(
        ".top",
        {
          y: "-100vh",
          duration: 1,
        },
        "a"
      )
      .to(
        ".bottom",
        {
          y: "100vh",
          duration: 1,
        },
        "a"
      )
      .to(
        ".action_perform",
        {
          bottom: "-100%",
          opacity: 0,
          duration: 1.5,
        },
        "a"
      )

  });
  return () => mm.revert();
},[])




  return (<div className=''>
    <div className='static main_head'ref={mn}>
       <div className="top">
          <h1 id="head_top_heading">
            Te<span>i</span>fic
          </h1>
        </div>
        <div className=''>
    <div className='relative left-0 w-full  top-0 '>
      {/* <img src={HeroBg1} alt='bg-hero' className='bg-cover w-full top-3 md:top-4 -left-[0.2rem] lg:top-[2.2rem] lg:-left-[0.35rem] image light '/> */}
      <img src={HeroBg1} alt='bg-hero' className='bg-cover w-full  image light '/>
      <img src={HeroBg2} alt='bg-hero' className='bg-cover w-full  no-light '/>
      </div>
     
      <motion.div  initial="initial"
  whileInView="animate"
  exit="exit"
  viewport={{ once:true, amount: 0.9 }} // Ensures it animates only once when 50% is in view
  variants={slideAnimation('right')} className='z-20 absolute  top-[20%] lg:top-[40%] lg:right-36 text-center w-full lg:text-right'>
        <h2 className='absolute text-4xl top-0 right-[20%] lg:right-0  lg:text-8xl text-[#FBC93E] bg-[#FBC93E] bg-clip-text blur-xl   shadow-[0_35px_60px_-15px_rgba(0,0,0,0.3)]'>Teific <br className='hidden lg:block'/> Technology</h2>
        <h2 className='relative top-0  text-4xl lg:text-8xl text-[#FBC93E] bg-[#FBC93E] bg-clip-text font-bold '>Teific <br className='hidden lg:block'/> Technology</h2>
       <p className='lg:text-2xl mt-5'>Empowering ease of your life</p>
      </motion.div>

    </div>

      <div className="bottom">
          <h1 id="head_bottom_heading">
            Te<span>i</span>fic
          </h1>
        </div>
        <div className="action_perform">
          <Mouse className="mouse"> This</Mouse>
          <p>Scroll Down</p>
        </div>



    </div>
   
    </div>
  )
}

export default Hero
